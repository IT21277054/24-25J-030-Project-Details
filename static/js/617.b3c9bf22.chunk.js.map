{"version":3,"file":"static/js/617.b3c9bf22.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","components/MainContectBlock/styles.ts","components/Header/styles.ts","components/Header/index.tsx","components/MainContectBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledButton = styled(\"button\")<{ color?: string }>`\n  background: ${(p) => p.color || \"#102D4D\"};\n  color: ${(p) => (p.color ? \"#102D4D\" : \"#fff\")};\n  font-size: 1rem;\n  font-weight: 700;\n  width: 100%;\n  border: 1px solid #edf3f5;\n  border-radius: 4px;\n  padding: 13px 0;\n  cursor: pointer;\n  margin-top: 0.625rem;\n  max-width: 180px;\n  transition: all 0.3s ease-in-out;\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\n\n  &:hover,\n  &:active,\n  &:focus {\n    color: #fff;\n    border: 1px solid #4072AF;\n    background-color: #4072AF;\n  }\n`;\n","import { StyledButton } from \"./styles\";\nimport { ButtonProps } from \"../types\";\n\nexport const Button = ({ color, children, onClick }: ButtonProps) => (\n  <StyledButton color={color} onClick={onClick}>\n    {children}\n  </StyledButton>\n);\n","import { Row } from \"antd\";\nimport styled from \"styled-components\";\n\nexport const ContentSection = styled(\"section\")`\n  position: relative;\n  padding: 0;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 4rem 0 4rem;\n  }\n`;\n\nexport const IconBackground = styled.div<{ icon: string }>`\n  background-image: url(${({ icon }) => `./img/svg/${icon}`});\n  background-size: cover;\n  background-position: right center;\n  background-repeat: no-repeat;\n  position: relative;\n  width: 101%;\n  height: 100%;\n  min-height: 700px;\n\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-start;\n  flex-direction: column;\n\n  & > div {\n    position: relative;\n    z-index: 2;\n    max-width: 60%;\n    padding: 6rem;\n    margin-top: auto;\n  }\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.4);\n    z-index: 1;\n  }\n\n  @media (max-width: 768px) {\n    padding: 2rem;\n    min-height: 400px;\n  }\n`;\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  text-align: left;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n`;\n\nexport const StyledRow = styled(Row)`\n  display: flex;\n  flex-direction: ${({ direction }: { direction: string }) =>\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\n  align-items: center;\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  margin-top: 0.5rem;\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n  color: #fff;\n  line-height: 1.6;\n`;\n\nexport const MinTitle = styled(\"h2\")`\n  font-size: 13px;\n  line-height: 1rem;\n  padding: 0;\n  text-transform: uppercase;\n  color: #000;\n  font-family: \"Motiva Sans Light\", sans-serif;\n`;\n\nexport const MinPara = styled(\"p\")`\n  font-size: 17px;\n  text-align: justify;\n  margin: 0;\n  color: #fff;\n`;\n\nexport const AboutContent = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n  color: #fff;\n  line-height: 1.6;\n`;\n\nexport const ServiceWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n`;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { MenuOutlined } from \"@ant-design/icons\";\n\nexport const HeaderSection = styled(\"header\")<{ scrolled: boolean }>`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  z-index: 1000;\n  background: transparent;\n  padding: 0.5rem;\n  margin: 0;\n  box-shadow: none;\n  border: none;\n  transition: background-color 0.3s ease, box-shadow 0.3s ease; /* Smooth transition for background change */\n\n  &.scrolled {\n    background-color: #102d4d;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);\n  }\n\n  .ant-row-space-between {\n    align-items: center;\n    text-align: center;\n  }\n`;\n\nexport const LogoContainer = styled(Link)`\n  display: flex;\n  margin-left: -90px;\n`;\n\nexport const NavLink = styled(\"div\")`\n  display: inline-block;\n  text-align: center;\n`;\n\nexport const CustomNavLink = styled(\"div\")`\n  width: 203px;\n  display: inline-block;\n\n  @media only screen and (max-width: 411px) {\n    width: 150px;\n  }\n\n  @media only screen and (max-width: 320px) {\n    width: 118px;\n  }\n`;\n\nexport const Burger = styled(\"div\")`\n  @media only screen and (max-width: 890px) {\n    display: block;\n  }\n\n  display: none;\n\n  svg {\n    fill: #102d4d;\n  }\n`;\n\nexport const NotHidden = styled(\"div\")`\n  @media only screen and (max-width: 890px) {\n    display: none;\n  }\n`;\n\nexport const Menu = styled(\"h5\")`\n  font-size: 1.5rem;\n  font-weight: 600;\n  text-align: center;\n`;\n\nexport const CustomNavLinkSmall = styled(NavLink)`\n  font-size: 1.2rem;\n  color: #fff;\n  transition: color 0.2s ease-in;\n  margin: 0.5rem 1rem;\n\n  @media only screen and (max-width: 1700px) {\n    font-size: 1rem;\n  }\n\n  @media only screen and (max-width: 768px) {\n    margin: 1.25rem 1rem;\n  }\n`;\n\nexport const Label = styled(\"span\")`\n  font-weight: 500;\n  color: #404041;\n  text-align: right;\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n`;\n\nexport const Outline = styled(MenuOutlined)`\n  font-size: 22px;\n`;\n\nexport const Span = styled(\"span\")`\n  cursor: pointer;\n  transition: all 0.3s ease-in-out;\n\n  &:hover,\n  &:active,\n  &:focus {\n    color: #4072af;\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport { Row, Col, Drawer } from \"antd\";\nimport { withTranslation, TFunction } from \"react-i18next\";\nimport Container from \"../../common/Container\";\nimport { PngIcon } from \"../../common/SvgIcon\";\nimport {\n  HeaderSection,\n  LogoContainer,\n  Burger,\n  NotHidden,\n  Menu,\n  CustomNavLinkSmall,\n  Label,\n  Outline,\n  Span,\n} from \"./styles\";\n\nconst Header = ({ t }: { t: TFunction }) => {\n  const [visible, setVisibility] = useState(false);\n  const [scrolled, setScrolled] = useState(false);\n\n  const toggleButton = () => {\n    setVisibility(!visible);\n  };\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.scrollY > 500) {\n        setScrolled(true);\n      } else {\n        setScrolled(false);\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  const MenuItem = () => {\n    const scrollTo = (id: string) => {\n      const element = document.getElementById(id) as HTMLDivElement;\n      if (element) {\n        const elementPosition =\n          element.getBoundingClientRect().top + window.pageYOffset;\n\n        const offsets: { [key: string]: number } = {\n          about: 150,\n          projectIntro: 150,\n          projectDoc: 100,\n          projectPresentation: 100,\n          milestone: 20,\n          screenShots: 100,\n          domain: 20,\n          imageBlock: 100,\n          profileCard: 100,\n          contact: 100,\n        };\n\n        const offset = offsets[id] || 100;\n\n        window.scrollTo({\n          top: elementPosition - offset,\n          behavior: \"smooth\",\n        });\n      }\n      setVisibility(false);\n    };\n\n    return (\n      <>\n        <CustomNavLinkSmall onClick={() => scrollTo(\"about\")}>\n          <Span>{t(\"About\")}</Span>\n        </CustomNavLinkSmall>\n        <CustomNavLinkSmall onClick={() => scrollTo(\"projectIntro\")}>\n          <Span>{t(\"Introduction\")}</Span>\n        </CustomNavLinkSmall>\n        <CustomNavLinkSmall onClick={() => scrollTo(\"projectDoc\")}>\n          <Span>{t(\"Documents\")}</Span>\n        </CustomNavLinkSmall>\n        <CustomNavLinkSmall onClick={() => scrollTo(\"projectPresentation\")}>\n          <Span>{t(\"Presentations\")}</Span>\n        </CustomNavLinkSmall>\n        <CustomNavLinkSmall onClick={() => scrollTo(\"screenShots\")}>\n          <Span>{t(\"UI Design\")}</Span>\n        </CustomNavLinkSmall>\n        <CustomNavLinkSmall onClick={() => scrollTo(\"milestone\")}>\n          <Span>{t(\"Milestone\")}</Span>\n        </CustomNavLinkSmall>\n        <CustomNavLinkSmall onClick={() => scrollTo(\"domain\")}>\n          <Span>{t(\"Domain\")}</Span>\n        </CustomNavLinkSmall>\n        <CustomNavLinkSmall onClick={() => scrollTo(\"imageBlock\")}>\n          <Span>{t(\"Group Images\")}</Span>\n        </CustomNavLinkSmall>\n        <CustomNavLinkSmall onClick={() => scrollTo(\"profileCard\")}>\n          <Span>{t(\"Team\")}</Span>\n        </CustomNavLinkSmall>\n        <CustomNavLinkSmall onClick={() => scrollTo(\"contact\")}>\n          <Span>{t(\"Contact\")}</Span>\n        </CustomNavLinkSmall>\n      </>\n    );\n  };\n\n  return (\n    <HeaderSection className={scrolled ? \"scrolled\" : \"\"} scrolled={scrolled}>\n      <Container>\n        <Row justify=\"space-between\">\n          <LogoContainer to=\"/\" aria-label=\"homepage\">\n            <div style={{ padding: \"5px\" }}>\n              <PngIcon src=\"logo6.png\" width=\"50px\" height=\"50px\" />\n            </div>\n          </LogoContainer>\n          <NotHidden>\n            <MenuItem />\n          </NotHidden>\n          <Burger onClick={toggleButton}>\n            <Outline />\n          </Burger>\n        </Row>\n        <Drawer closable={false} open={visible} onClose={toggleButton}>\n          <Col style={{ marginBottom: \"2.5rem\" }}>\n            <Label onClick={toggleButton}>\n              <Col span={12}>\n                <Menu>Menu</Menu>\n              </Col>\n              <Col span={12}>\n                <Outline />\n              </Col>\n            </Label>\n          </Col>\n          <MenuItem />\n        </Drawer>\n      </Container>\n    </HeaderSection>\n  );\n};\n\nexport default withTranslation()(Header);\n","import { Row, Col } from \"antd\";\nimport { withTranslation, TFunction } from \"react-i18next\";\nimport { Button } from \"../../common/Button\";\nimport { SvgIcon } from \"../../common/SvgIcon\";\nimport {\n  ContentSection,\n  Content,\n  ContentWrapper,\n  ServiceWrapper,\n  MinTitle,\n  MinPara,\n  StyledRow,\n  ButtonWrapper,\n  IconBackground,\n} from \"./styles\";\nimport { ContentBlockProps } from \"../ContentBlock/types\";\nimport Header from \"../Header\";\n\nconst ContentBlock = ({\n  icon,\n  title,\n  content,\n  section,\n  button,\n  t,\n  id,\n  direction,\n}: ContentBlockProps & { t: TFunction }) => {\n  const scrollTo = (id: string) => {\n    const element = document.getElementById(id) as HTMLDivElement;\n    element?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  return (\n    <ContentSection>\n      <Header />\n      <StyledRow justify=\"center\" align=\"middle\" id={id} direction={direction}>\n        <Col span={24}>\n          <IconBackground icon={icon}>\n            <ContentWrapper>\n              <h6 style={{ color: \"white\" }}>{t(title)}</h6>\n              {id === \"projectIntro\" ? (\n                <MinPara>{t(content)}</MinPara>\n              ) : (\n                <Content>{t(content)}</Content>\n              )}\n\n              {direction === \"right\" ? (\n                <ButtonWrapper>\n                  {Array.isArray(button) &&\n                    button.map(({ color, title }, index) => (\n                      <Button\n                        key={index}\n                        color={color}\n                        onClick={() => scrollTo(\"about\")}\n                      >\n                        {t(title)}\n                      </Button>\n                    ))}\n                </ButtonWrapper>\n              ) : (\n                <ServiceWrapper>\n                  <Row justify=\"space-between\">\n                    {Array.isArray(section) &&\n                      section.map(({ title, content, icon }, index) => (\n                        <Col key={index} span={11}>\n                          <MinTitle>{t(title)}</MinTitle>\n                          <MinPara>{t(content)}</MinPara>\n                        </Col>\n                      ))}\n                  </Row>\n                </ServiceWrapper>\n              )}\n            </ContentWrapper>\n          </IconBackground>\n        </Col>\n      </StyledRow>\n    </ContentSection>\n  );\n};\n\nexport default withTranslation()(ContentBlock);\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","p","color","Button","_ref","children","onClick","_jsx","ContentSection","IconBackground","div","_templateObject2","icon","concat","ContentWrapper","_templateObject3","StyledRow","Row","_templateObject4","_ref2","direction","ButtonWrapper","_templateObject5","Content","_templateObject6","MinTitle","_templateObject7","MinPara","_templateObject8","ServiceWrapper","_templateObject9","_templateObject10","HeaderSection","LogoContainer","Link","NavLink","Burger","NotHidden","Menu","CustomNavLinkSmall","Label","Outline","MenuOutlined","Span","_templateObject11","withTranslation","t","_useState","useState","_useState2","_slicedToArray","visible","setVisibility","_useState3","_useState4","scrolled","setScrolled","toggleButton","useEffect","handleScroll","window","scrollY","addEventListener","removeEventListener","MenuItem","scrollTo","id","element","document","getElementById","elementPosition","getBoundingClientRect","top","pageYOffset","offset","about","projectIntro","projectDoc","projectPresentation","milestone","screenShots","domain","imageBlock","profileCard","contact","behavior","_jsxs","_Fragment","className","Container","justify","to","style","padding","PngIcon","src","width","height","Drawer","closable","open","onClose","Col","marginBottom","span","title","content","section","button","Header","align","Array","isArray","map","index","scrollIntoView","_ref3"],"sourceRoot":""}