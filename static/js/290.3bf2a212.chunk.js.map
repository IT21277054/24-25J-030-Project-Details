{"version":3,"file":"static/js/290.3bf2a212.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","components/ContentBlock/styles.ts","components/ContentBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<{ color?: string }>`\r\n  background: ${(p) => p.color || \"#102D4D\"};\r\n  color: ${(p) => (p.color ? \"#102D4D\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid #4072AF;\r\n    background-color: #4072AF;\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({ color, children, onClick }: ButtonProps) => (\r\n  <StyledButton color={color} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n","import { Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const AboutContent = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  flex-direction: ${({ direction }: { direction: string }) =>\r\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 17px;\r\n   text-align: justify;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n\r\n","import { Row, Col } from \"antd\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { ContentBlockProps } from \"./types\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { PngIcon, SvgIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst ContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  button,\r\n  t,\r\n  id,\r\n  direction,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContentSection>\r\n      <Fade direction={direction} triggerOnce>\r\n        <StyledRow\r\n          justify=\"space-between\"\r\n          align=\"middle\"\r\n          id={id}\r\n          direction={direction}\r\n        >\r\n          {icon === 'none' ? ( \"\") : (<Col lg={11} md={11} sm={12} xs={24}>\r\n            <PngIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>)}\r\n          \r\n          <Col\r\n            lg={icon === \"none\" ? 24 : 11}\r\n            md={icon === \"none\" ? 24 : 11}\r\n            sm={icon === \"none\" ? 24 : 11}\r\n            xs={icon === \"none\" ? 24 : 24}\r\n          >\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              {id === 'projectIntro' ? ( <MinPara>{t(content)}</MinPara>) : (<Content>{t(content)}</Content>)}\r\n             \r\n              {direction === \"right\" ? (\r\n                <ButtonWrapper>\r\n                  {typeof button === \"object\" &&\r\n                    button.map(\r\n                      (\r\n                        item: {\r\n                          color?: string;\r\n                          title: string;\r\n                        },\r\n                        id: number\r\n                      ) => {\r\n                        return (\r\n                          <Button\r\n                            key={id}\r\n                            color={item.color}\r\n                            onClick={() => scrollTo(\"about\")}\r\n                          >\r\n                            {t(item.title)}\r\n                          </Button>\r\n                        );\r\n                      }\r\n                    )}\r\n                </ButtonWrapper>\r\n              ) : (\r\n                <ServiceWrapper>\r\n                  <Row justify=\"space-between\">\r\n                    {typeof section === \"object\" &&\r\n                      section.map(\r\n                        (\r\n                          item: {\r\n                            title: string;\r\n                            content: string;\r\n                            icon: string;\r\n                          },\r\n                          id: number\r\n                        ) => {\r\n                          return (\r\n                            <Col key={id} span={11}>\r\n                              <SvgIcon\r\n                                src={item.icon}\r\n                                width=\"60px\"\r\n                                height=\"60px\"\r\n                              />\r\n                              <MinTitle>{t(item.title)}</MinTitle>\r\n                              <MinPara>{t(item.content)}</MinPara>\r\n                            </Col>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </Row>\r\n                </ServiceWrapper>\r\n              )}\r\n            </ContentWrapper>\r\n          </Col>\r\n        </StyledRow>\r\n      </Fade>\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ContentBlock);\r\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","p","color","Button","_ref","children","onClick","_jsx","ContentSection","Content","_templateObject2","StyledRow","_templateObject3","Row","_templateObject4","direction","ContentWrapper","_templateObject5","ServiceWrapper","_templateObject6","MinTitle","_templateObject7","MinPara","_templateObject8","ButtonWrapper","_templateObject9","withTranslation","icon","title","content","section","button","t","id","Fade","triggerOnce","_jsxs","justify","align","Col","lg","md","sm","xs","PngIcon","src","width","height","map","item","document","getElementById","scrollIntoView","behavior","scrollTo","span","SvgIcon"],"sourceRoot":""}