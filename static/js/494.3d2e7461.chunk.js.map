{"version":3,"file":"static/js/494.3d2e7461.chunk.js","mappings":"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","sources":["components/MainContectBlock/styles.ts","components/Header/styles.ts","components/Header/index.tsx","components/MainContectBlock/index.tsx","common/Button/styles.ts","common/Button/index.tsx"],"sourcesContent":["import { Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 0;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const IconBackground = styled.div<{ icon: string }>`\r\n  background-image: url(${({ icon }) => `./img/svg/${icon}`});\r\n  background-size: cover;\r\n  background-position: right center;\r\n  background-repeat: no-repeat;\r\n  position: relative;\r\n  width: 101%;\r\n  height: 100%;\r\n  min-height: 700px;\r\n\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n\r\n  & > div {\r\n    position: relative;\r\n    z-index: 2;\r\n    max-width: 60%;\r\n    padding: 6rem;\r\n    margin-top: auto;\r\n  }\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(0, 0, 0, 0.4);\r\n    z-index: 1;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 2rem;\r\n    min-height: 400px;\r\n  }\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  text-align: left;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  display: flex;\r\n  flex-direction: ${({ direction }: { direction: string }) =>\r\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\r\n  align-items: center;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n  color: #fff;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h2\")`\r\n  font-size: 13px;\r\n  line-height: 1rem;\r\n  padding: 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 17px;\r\n  text-align: justify;\r\n  margin: 0;\r\n  color: #fff;\r\n`;\r\n\r\nexport const AboutContent = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n  color: #fff;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MenuOutlined } from \"@ant-design/icons\";\r\n\r\nexport const HeaderSection = styled(\"header\")<{ scrolled: boolean }>`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  z-index: 1000;\r\n  background: transparent;\r\n  padding: 0.5rem;\r\n  margin: 0;\r\n  box-shadow: none;\r\n  border: none;\r\n  transition: background-color 0.3s ease, box-shadow 0.3s ease; /* Smooth transition for background change */\r\n\r\n  &.scrolled {\r\n    background-color: #102d4d;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);\r\n  }\r\n\r\n  .ant-row-space-between {\r\n    align-items: center;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const LogoContainer = styled(Link)`\r\n  display: flex;\r\n  margin-left: -90px;\r\n`;\r\n\r\nexport const NavLink = styled(\"div\")`\r\n  display: inline-block;\r\n  text-align: center;\r\n`;\r\n\r\nexport const CustomNavLink = styled(\"div\")`\r\n  width: 203px;\r\n  display: inline-block;\r\n\r\n  @media only screen and (max-width: 411px) {\r\n    width: 150px;\r\n  }\r\n\r\n  @media only screen and (max-width: 320px) {\r\n    width: 118px;\r\n  }\r\n`;\r\n\r\nexport const Burger = styled(\"div\")`\r\n  @media only screen and (max-width: 890px) {\r\n    display: block;\r\n  }\r\n\r\n  display: none;\r\n\r\n  svg {\r\n    fill: #102d4d;\r\n  }\r\n`;\r\n\r\nexport const NotHidden = styled(\"div\")`\r\n  @media only screen and (max-width: 890px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Menu = styled(\"h5\")`\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  text-align: center;\r\n`;\r\n\r\nexport const CustomNavLinkSmall = styled(NavLink)`\r\n  font-size: 1.2rem;\r\n  color: #fff;\r\n  transition: color 0.2s ease-in;\r\n  margin: 0.5rem 1rem;\r\n\r\n  @media only screen and (max-width: 1700px) {\r\n    font-size: 1rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    margin: 1.25rem 1rem;\r\n  }\r\n`;\r\n\r\nexport const Label = styled(\"span\")`\r\n  font-weight: 500;\r\n  color: #404041;\r\n  text-align: right;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n`;\r\n\r\nexport const Outline = styled(MenuOutlined)`\r\n  font-size: 22px;\r\n`;\r\n\r\nexport const Span = styled(\"span\")`\r\n  cursor: pointer;\r\n  transition: all 0.3s ease-in-out;\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #4072af;\r\n  }\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Row, Col, Drawer } from \"antd\";\r\nimport { withTranslation, TFunction } from \"react-i18next\";\r\nimport Container from \"../../common/Container\";\r\nimport { PngIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  HeaderSection,\r\n  LogoContainer,\r\n  Burger,\r\n  NotHidden,\r\n  Menu,\r\n  CustomNavLinkSmall,\r\n  Label,\r\n  Outline,\r\n  Span,\r\n} from \"./styles\";\r\n\r\nconst Header = ({ t }: { t: TFunction }) => {\r\n  const [visible, setVisibility] = useState(false);\r\n  const [scrolled, setScrolled] = useState(false);\r\n\r\n  const toggleButton = () => {\r\n    setVisibility(!visible);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      if (window.scrollY > 500) {\r\n        setScrolled(true);\r\n      } else {\r\n        setScrolled(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const MenuItem = () => {\r\n    const scrollTo = (id: string) => {\r\n      const element = document.getElementById(id) as HTMLDivElement;\r\n      if (element) {\r\n        const elementPosition =\r\n          element.getBoundingClientRect().top + window.pageYOffset;\r\n\r\n        const offsets: { [key: string]: number } = {\r\n          about: 150,\r\n          projectIntro: 150,\r\n          projectDoc: 100,\r\n          projectPresentation: 100,\r\n          milestone: 20,\r\n          screenShots: 100,\r\n          domain: 20,\r\n          imageBlock: 100,\r\n          profileCard: 100,\r\n          contact: 100,\r\n        };\r\n\r\n        const offset = offsets[id] || 100;\r\n\r\n        window.scrollTo({\r\n          top: elementPosition - offset,\r\n          behavior: \"smooth\",\r\n        });\r\n      }\r\n      setVisibility(false);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <CustomNavLinkSmall onClick={() => scrollTo(\"about\")}>\r\n          <Span>{t(\"About\")}</Span>\r\n        </CustomNavLinkSmall>\r\n        <CustomNavLinkSmall onClick={() => scrollTo(\"projectIntro\")}>\r\n          <Span>{t(\"Introduction\")}</Span>\r\n        </CustomNavLinkSmall>\r\n        <CustomNavLinkSmall onClick={() => scrollTo(\"projectDoc\")}>\r\n          <Span>{t(\"Documents\")}</Span>\r\n        </CustomNavLinkSmall>\r\n        <CustomNavLinkSmall onClick={() => scrollTo(\"projectPresentation\")}>\r\n          <Span>{t(\"Presentations\")}</Span>\r\n        </CustomNavLinkSmall>\r\n        <CustomNavLinkSmall onClick={() => scrollTo(\"screenShots\")}>\r\n          <Span>{t(\"UI Design\")}</Span>\r\n        </CustomNavLinkSmall>\r\n        <CustomNavLinkSmall onClick={() => scrollTo(\"milestone\")}>\r\n          <Span>{t(\"Milestone\")}</Span>\r\n        </CustomNavLinkSmall>\r\n        <CustomNavLinkSmall onClick={() => scrollTo(\"domain\")}>\r\n          <Span>{t(\"Domain\")}</Span>\r\n        </CustomNavLinkSmall>\r\n        <CustomNavLinkSmall onClick={() => scrollTo(\"imageBlock\")}>\r\n          <Span>{t(\"Group Images\")}</Span>\r\n        </CustomNavLinkSmall>\r\n        <CustomNavLinkSmall onClick={() => scrollTo(\"profileCard\")}>\r\n          <Span>{t(\"Team\")}</Span>\r\n        </CustomNavLinkSmall>\r\n        <CustomNavLinkSmall onClick={() => scrollTo(\"contact\")}>\r\n          <Span>{t(\"Contact\")}</Span>\r\n        </CustomNavLinkSmall>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <HeaderSection className={scrolled ? \"scrolled\" : \"\"} scrolled={scrolled}>\r\n      <Container>\r\n        <Row justify=\"space-between\">\r\n          <LogoContainer to=\"/\" aria-label=\"homepage\">\r\n            <div style={{ padding: \"5px\" }}>\r\n              <PngIcon src=\"logo6.png\" width=\"50px\" height=\"50px\" />\r\n            </div>\r\n          </LogoContainer>\r\n          <NotHidden>\r\n            <MenuItem />\r\n          </NotHidden>\r\n          <Burger onClick={toggleButton}>\r\n            <Outline />\r\n          </Burger>\r\n        </Row>\r\n        <Drawer closable={false} open={visible} onClose={toggleButton}>\r\n          <Col style={{ marginBottom: \"2.5rem\" }}>\r\n            <Label onClick={toggleButton}>\r\n              <Col span={12}>\r\n                <Menu>Menu</Menu>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Outline />\r\n              </Col>\r\n            </Label>\r\n          </Col>\r\n          <MenuItem />\r\n        </Drawer>\r\n      </Container>\r\n    </HeaderSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Header);\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation, TFunction } from \"react-i18next\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n  IconBackground,\r\n} from \"./styles\";\r\nimport { ContentBlockProps } from \"../ContentBlock/types\";\r\nimport Header from \"../Header\";\r\n\r\nconst ContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  button,\r\n  t,\r\n  id,\r\n  direction,\r\n}: ContentBlockProps & { t: TFunction }) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <ContentSection>\r\n      <Header />\r\n      <StyledRow justify=\"center\" align=\"middle\" id={id} direction={direction}>\r\n        <Col span={24}>\r\n          <IconBackground icon={icon}>\r\n            <ContentWrapper>\r\n              <h6 style={{ color: \"white\" }}>{t(title)}</h6>\r\n              {id === \"projectIntro\" ? (\r\n                <MinPara>{t(content)}</MinPara>\r\n              ) : (\r\n                <Content>{t(content)}</Content>\r\n              )}\r\n\r\n              {direction === \"right\" ? (\r\n                <ButtonWrapper>\r\n                  {Array.isArray(button) &&\r\n                    button.map(({ color, title }, index) => (\r\n                      <Button\r\n                        key={index}\r\n                        color={color}\r\n                        onClick={() => scrollTo(\"about\")}\r\n                      >\r\n                        {t(title)}\r\n                      </Button>\r\n                    ))}\r\n                </ButtonWrapper>\r\n              ) : (\r\n                <ServiceWrapper>\r\n                  <Row justify=\"space-between\">\r\n                    {Array.isArray(section) &&\r\n                      section.map(({ title, content, icon }, index) => (\r\n                        <Col key={index} span={11}>\r\n                          <MinTitle>{t(title)}</MinTitle>\r\n                          <MinPara>{t(content)}</MinPara>\r\n                        </Col>\r\n                      ))}\r\n                  </Row>\r\n                </ServiceWrapper>\r\n              )}\r\n            </ContentWrapper>\r\n          </IconBackground>\r\n        </Col>\r\n      </StyledRow>\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ContentBlock);\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<{ color?: string }>`\r\n  background: ${(p) => p.color || \"#102D4D\"};\r\n  color: ${(p) => (p.color ? \"#102D4D\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid #4072AF;\r\n    background-color: #4072AF;\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({ color, children, onClick }: ButtonProps) => (\r\n  <StyledButton color={color} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n"],"names":["ContentSection","styled","_templateObject","_taggedTemplateLiteral","IconBackground","div","_templateObject2","_ref","icon","concat","ContentWrapper","_templateObject3","StyledRow","Row","_templateObject4","_ref2","direction","ButtonWrapper","_templateObject5","Content","_templateObject6","MinTitle","_templateObject7","MinPara","_templateObject8","ServiceWrapper","_templateObject9","_templateObject10","HeaderSection","LogoContainer","Link","NavLink","Burger","NotHidden","Menu","CustomNavLinkSmall","Label","Outline","MenuOutlined","Span","_templateObject11","withTranslation","t","visible","setVisibility","useState","scrolled","setScrolled","toggleButton","useEffect","handleScroll","window","scrollY","addEventListener","removeEventListener","MenuItem","scrollTo","id","element","document","getElementById","elementPosition","getBoundingClientRect","top","pageYOffset","offset","about","projectIntro","projectDoc","projectPresentation","milestone","screenShots","domain","imageBlock","profileCard","contact","behavior","_jsxs","_Fragment","children","_jsx","onClick","className","Container","justify","to","style","padding","PngIcon","src","width","height","Drawer","closable","open","onClose","Col","marginBottom","span","title","content","section","button","Header","align","color","Array","isArray","map","index","Button","scrollIntoView","_ref3","StyledButton","p"],"sourceRoot":""}