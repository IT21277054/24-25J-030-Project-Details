{"version":3,"file":"static/js/617.b99b32e7.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","components/MainContectBlock/styles.ts","components/Header/styles.ts","components/Header/index.tsx","components/MainContectBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<{ color?: string }>`\r\n  background: ${(p) => p.color || \"#102D4D\"};\r\n  color: ${(p) => (p.color ? \"#102D4D\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid #4072AF;\r\n    background-color: #4072AF;\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({ color, children, onClick }: ButtonProps) => (\r\n  <StyledButton color={color} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n","import { Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 0;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const IconBackground = styled.div<{ icon: string }>`\r\n  background-image: url(${({ icon }) => `./img/svg/${icon}`});\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 700px;\r\n\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n\r\n  & > div {\r\n    position: relative;\r\n    z-index: 2;\r\n    max-width: 60%;\r\n    padding: 6rem;\r\n    margin-top: auto;\r\n  }\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: rgba(0, 0, 0, 0.4);\r\n    z-index: 1;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 2rem;\r\n    min-height: 400px;\r\n  }\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  text-align: left;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  display: flex;\r\n  flex-direction: ${({ direction }: { direction: string }) =>\r\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\r\n  align-items: center;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n  color: #fff;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h2\")`\r\n  font-size: 13px;\r\n  line-height: 1rem;\r\n  padding: 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 17px;\r\n  text-align: justify;\r\n  margin: 0;\r\n  color: #fff;\r\n`;\r\n\r\nexport const AboutContent = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n  color: #fff;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MenuOutlined } from \"@ant-design/icons\";\r\n\r\nexport const HeaderSection = styled(\"header\")<{ scrolled: boolean }>`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  z-index: 1000;\r\n  background: transparent;\r\n  padding: 0.5rem;\r\n  margin: 0;\r\n  box-shadow: none;\r\n  border: none;\r\n  transition: background-color 0.3s ease, box-shadow 0.3s ease; /* Smooth transition for background change */\r\n\r\n  &.scrolled {\r\n    background-color: #102d4d;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);\r\n  }\r\n\r\n  .ant-row-space-between {\r\n    align-items: center;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const LogoContainer = styled(Link)`\r\n  display: flex;\r\n  margin-left: -90px;\r\n`;\r\n\r\nexport const NavLink = styled(\"div\")`\r\n  display: inline-block;\r\n  text-align: center;\r\n`;\r\n\r\nexport const CustomNavLink = styled(\"div\")`\r\n  width: 203px;\r\n  display: inline-block;\r\n\r\n  @media only screen and (max-width: 411px) {\r\n    width: 150px;\r\n  }\r\n\r\n  @media only screen and (max-width: 320px) {\r\n    width: 118px;\r\n  }\r\n`;\r\n\r\nexport const Burger = styled(\"div\")`\r\n  @media only screen and (max-width: 890px) {\r\n    display: block;\r\n  }\r\n\r\n  display: none;\r\n\r\n  svg {\r\n    fill: #102d4d;\r\n  }\r\n`;\r\n\r\nexport const NotHidden = styled(\"div\")`\r\n  @media only screen and (max-width: 890px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Menu = styled(\"h5\")`\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  text-align: center;\r\n`;\r\n\r\nexport const CustomNavLinkSmall = styled(NavLink)`\r\n  font-size: 1.2rem;\r\n  color: #fff;\r\n  transition: color 0.2s ease-in;\r\n  margin: 0.5rem 1rem;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    margin: 1.25rem 1rem;\r\n  }\r\n`;\r\n\r\nexport const Label = styled(\"span\")`\r\n  font-weight: 500;\r\n  color: #404041;\r\n  text-align: right;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n`;\r\n\r\nexport const Outline = styled(MenuOutlined)`\r\n  font-size: 22px;\r\n`;\r\n\r\nexport const Span = styled(\"span\")`\r\n  cursor: pointer;\r\n  transition: all 0.3s ease-in-out;\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #4072af;\r\n  }\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Row, Col, Drawer } from \"antd\";\r\nimport { withTranslation, TFunction } from \"react-i18next\";\r\nimport Container from \"../../common/Container\";\r\nimport { PngIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  HeaderSection,\r\n  LogoContainer,\r\n  Burger,\r\n  NotHidden,\r\n  Menu,\r\n  CustomNavLinkSmall,\r\n  Label,\r\n  Outline,\r\n  Span,\r\n} from \"./styles\";\r\n\r\nconst Header = ({ t }: { t: TFunction }) => {\r\n  const [visible, setVisibility] = useState(false);\r\n  const [scrolled, setScrolled] = useState(false);\r\n\r\n  const toggleButton = () => {\r\n    setVisibility(!visible);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      if (window.scrollY > 500) {\r\n        setScrolled(true);\r\n      } else {\r\n        setScrolled(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const MenuItem = () => {\r\n    const scrollTo = (id: string) => {\r\n      const element = document.getElementById(id) as HTMLDivElement;\r\n      element.scrollIntoView({\r\n        behavior: \"smooth\",\r\n      });\r\n      setVisibility(false);\r\n    };\r\n    return (\r\n      <>\r\n        <CustomNavLinkSmall onClick={() => scrollTo(\"about\")}>\r\n          <Span>{t(\"About\")}</Span>\r\n        </CustomNavLinkSmall>\r\n        <CustomNavLinkSmall onClick={() => scrollTo(\"projectIntro\")}>\r\n          <Span>{t(\"Introduction\")}</Span>\r\n        </CustomNavLinkSmall>\r\n        <CustomNavLinkSmall onClick={() => scrollTo(\"projectDoc\")}>\r\n          <Span>{t(\"Documents\")}</Span>\r\n        </CustomNavLinkSmall>\r\n        <CustomNavLinkSmall onClick={() => scrollTo(\"projectPresentation\")}>\r\n          <Span>{t(\"Presentations\")}</Span>\r\n        </CustomNavLinkSmall>\r\n        <CustomNavLinkSmall onClick={() => scrollTo(\"milestone\")}>\r\n          <Span>{t(\"Milestone\")}</Span>\r\n        </CustomNavLinkSmall>\r\n        <CustomNavLinkSmall onClick={() => scrollTo(\"domain\")}>\r\n          <Span>{t(\"Domain\")}</Span>\r\n        </CustomNavLinkSmall>\r\n        <CustomNavLinkSmall onClick={() => scrollTo(\"imageBlock\")}>\r\n          <Span>{t(\"Group Images\")}</Span>\r\n        </CustomNavLinkSmall>\r\n        <CustomNavLinkSmall onClick={() => scrollTo(\"profileCard\")}>\r\n          <Span>{t(\"Team\")}</Span>\r\n        </CustomNavLinkSmall>\r\n        <CustomNavLinkSmall onClick={() => scrollTo(\"contact\")}>\r\n          <Span>{t(\"Contact\")}</Span>\r\n        </CustomNavLinkSmall>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <HeaderSection className={scrolled ? \"scrolled\" : \"\"} scrolled={scrolled}>\r\n      <Container>\r\n        <Row justify=\"space-between\">\r\n          <LogoContainer to=\"/\" aria-label=\"homepage\">\r\n            <PngIcon src=\"logo6.png\" width=\"170px\" height=\"90px\" />\r\n          </LogoContainer>\r\n          <NotHidden>\r\n            <MenuItem />\r\n          </NotHidden>\r\n          <Burger onClick={toggleButton}>\r\n            <Outline />\r\n          </Burger>\r\n        </Row>\r\n        <Drawer closable={false} open={visible} onClose={toggleButton}>\r\n          <Col style={{ marginBottom: \"2.5rem\" }}>\r\n            <Label onClick={toggleButton}>\r\n              <Col span={12}>\r\n                <Menu>Menu</Menu>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Outline />\r\n              </Col>\r\n            </Label>\r\n          </Col>\r\n          <MenuItem />\r\n        </Drawer>\r\n      </Container>\r\n    </HeaderSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Header);\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation, TFunction } from \"react-i18next\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n  IconBackground,\r\n} from \"./styles\";\r\nimport { ContentBlockProps } from \"../ContentBlock/types\";\r\nimport Header from \"../Header\";\r\n\r\nconst ContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  button,\r\n  t,\r\n  id,\r\n  direction,\r\n}: ContentBlockProps & { t: TFunction }) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <ContentSection>\r\n      <Header />\r\n      <StyledRow justify=\"center\" align=\"middle\" id={id} direction={direction}>\r\n        <Col span={24}>\r\n          <IconBackground icon={icon}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              {id === \"projectIntro\" ? (\r\n                <MinPara>{t(content)}</MinPara>\r\n              ) : (\r\n                <Content>{t(content)}</Content>\r\n              )}\r\n\r\n              {direction === \"right\" ? (\r\n                <ButtonWrapper>\r\n                  {Array.isArray(button) &&\r\n                    button.map(({ color, title }, index) => (\r\n                      <Button\r\n                        key={index}\r\n                        color={color}\r\n                        onClick={() => scrollTo(\"about\")}\r\n                      >\r\n                        {t(title)}\r\n                      </Button>\r\n                    ))}\r\n                </ButtonWrapper>\r\n              ) : (\r\n                <ServiceWrapper>\r\n                  <Row justify=\"space-between\">\r\n                    {Array.isArray(section) &&\r\n                      section.map(({ title, content, icon }, index) => (\r\n                        <Col key={index} span={11}>\r\n                          <MinTitle>{t(title)}</MinTitle>\r\n                          <MinPara>{t(content)}</MinPara>\r\n                        </Col>\r\n                      ))}\r\n                  </Row>\r\n                </ServiceWrapper>\r\n              )}\r\n            </ContentWrapper>\r\n          </IconBackground>\r\n        </Col>\r\n      </StyledRow>\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ContentBlock);\r\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","p","color","Button","_ref","children","onClick","_jsx","ContentSection","IconBackground","div","_templateObject2","icon","concat","ContentWrapper","_templateObject3","StyledRow","Row","_templateObject4","_ref2","direction","ButtonWrapper","_templateObject5","Content","_templateObject6","MinTitle","_templateObject7","MinPara","_templateObject8","ServiceWrapper","_templateObject9","_templateObject10","HeaderSection","LogoContainer","Link","NavLink","Burger","NotHidden","Menu","CustomNavLinkSmall","Label","Outline","MenuOutlined","Span","_templateObject11","withTranslation","t","_useState","useState","_useState2","_slicedToArray","visible","setVisibility","_useState3","_useState4","scrolled","setScrolled","toggleButton","useEffect","handleScroll","window","scrollY","addEventListener","removeEventListener","MenuItem","scrollTo","id","document","getElementById","scrollIntoView","behavior","_jsxs","_Fragment","className","Container","justify","to","PngIcon","src","width","height","Drawer","closable","open","onClose","Col","style","marginBottom","span","title","content","section","button","Header","align","Array","isArray","map","index","element","_ref3"],"sourceRoot":""}